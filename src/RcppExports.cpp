// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// jaro_distance
double jaro_distance(std::string s1, std::string s2);
RcppExport SEXP _strmatch_jaro_distance(SEXP s1SEXP, SEXP s2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< std::string >::type s2(s2SEXP);
    rcpp_result_gen = Rcpp::wrap(jaro_distance(s1, s2));
    return rcpp_result_gen;
END_RCPP
}
// jaro_Winkler
double jaro_Winkler(string s1, string s2);
RcppExport SEXP _strmatch_jaro_Winkler(SEXP s1SEXP, SEXP s2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< string >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< string >::type s2(s2SEXP);
    rcpp_result_gen = Rcpp::wrap(jaro_Winkler(s1, s2));
    return rcpp_result_gen;
END_RCPP
}
// levenstein_distance
unsigned int levenstein_distance(const std::string& s1, const std::string& s2);
RcppExport SEXP _strmatch_levenstein_distance(SEXP s1SEXP, SEXP s2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< const std::string& >::type s2(s2SEXP);
    rcpp_result_gen = Rcpp::wrap(levenstein_distance(s1, s2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_strmatch_jaro_distance", (DL_FUNC) &_strmatch_jaro_distance, 2},
    {"_strmatch_jaro_Winkler", (DL_FUNC) &_strmatch_jaro_Winkler, 2},
    {"_strmatch_levenstein_distance", (DL_FUNC) &_strmatch_levenstein_distance, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_strmatch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
